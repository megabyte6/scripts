#!/usr/bin/env python

from argparse import ArgumentParser
from os.path import join
from subprocess import run


def write_service_file(file_path: str, charge_threshold: str = 100):
    with open(file_path, "w") as f:
        f.write(
            f"""[Unit]
Description=Set Battery Charge Threshold
After=multi-user.target

[Service]
Type=oneshot
ExecStart=/bin/bash -c 'echo {charge_threshold} > /sys/class/power_supply/BAT?/charge_control_end_threshold'

[Install]
WantedBy=multi-user.target
"""
        )


def start_service(service_name: str, verbose: bool = False):
    # In case this is not the first time running this script, reload the daemon to use the new service file.
    if verbose:
        print("Reloading systemd daemon...")
    run(["sudo", "systemctl", "daemon-reload"])
    if verbose:
        print(f"Enabling and starting {service_name}...")
    run(["sudo", "systemctl", "enable", "--now", service_name])


def main():
    parser = ArgumentParser(description="Set battery charge threshold on ASUS Laptops running Linux.")
    parser.add_argument("threshold", type=int, help="The battery charge threshold.")
    parser.add_argument("-q", "--quiet", action="store_true", help="Suppress output.")
    args = parser.parse_args()

    # Threshold is a percentage, so it must be either 60, 80, or 100.
    if args.threshold not in [60, 80, 100]:
        parser.error("Threshold must be either 60, 80, or 100.")

    service_name = "limit-battery.service"
    write_service_file(file_path=join("/", "etc", "systemd", "system", service_name), charge_threshold=args.threshold)

    start_service(service_name=service_name, verbose=not args.quiet)


if __name__ == "__main__":
    main()
